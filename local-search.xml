<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>95</title>
    <link href="/2022/09/05/9-5/"/>
    <url>/2022/09/05/9-5/</url>
    
    <content type="html"><![CDATA[<blockquote><p>1.求点M(4,-3,5)到原点及各坐标轴的距离。</p></blockquote><p><span class="math display">\[D_o=\sqrt{4^2+(-3)^2+5^2}=5\sqrt2\\\\D_x=\sqrt{(-3)^2+5^2}=\sqrt{34}\\\\D_y=\sqrt{4^2+5^2}=\sqrt{41}\\\\D_z=\sqrt{4^2+(-3)^2}=5\]</span></p><blockquote><p>2.向量<spanclass="math inline">\(\vec{a}\)</span>与x轴，y轴成等角，而与z轴的夹角是它们的两倍，求<spanclass="math inline">\(\vec{a}^o\)</span>。</p></blockquote><p><span class="math display">\[设\vec{a}=(x,y,z) \\\because\cos\alpha=\frac{x}{||\vec{a}||}=cos\beta=\frac{y}{||\vec{a}||}=t\\\\\therefore x=y \\\because \cos \gamma=2t^2-1且\cos^2\alpha+\cos^2\beta+\cos^2\gamma=1\\\\\therefore 4t^2-1=1\\\therefore t=\frac{\sqrt2}{2}\\\therefore \vec{a}^o=(\frac{\sqrt2}{2},\frac{\sqrt2}{2},0)\]</span></p><blockquote><p>3.已知A(2,4,1)，B(3,7,5)，C(4,10,9)，证明点A，B，C在同一直线上。</p></blockquote><p><span class="math display">\[易知2\vec{AB}=\vec{AC}\]</span></p><blockquote><p>4.已知<span class="math inline">\(\triangle\)</span>ABC中，<spanclass="math inline">\(\vec{AB}=(2,1,-2),\vec{BC}=(3,2,6)\)</span>，求三角形的三个内角。</p></blockquote><p><span class="math display">\[\cos A=\cos&lt;\vec{AB},\vec{AC}&gt;=\frac{\sqrt2}{6}\\\\\cos B=\cos&lt;\vec{BA},\vec{BC}&gt;=\frac{4}{21}\\\cos C=\cos&lt;\vec{CA},\vec{CB}&gt;=\frac{9\sqrt{2}}{14}\\\\\]</span></p><blockquote><p>5.设<spanclass="math inline">\(A(x_1,y_1,z_1),B(x_2,y_2,z_2)\)</span>为两已知点，线段AB上的点M(x,y,z)分有向线段<spanclass="math inline">\(\vec{AB}\)</span>为两条有向线段<spanclass="math inline">\(\vec{AM}\)</span>与<spanclass="math inline">\(\vec{MB}\)</span>，且使<spanclass="math inline">\(|||\vec{AM}||=\lambda||\vec{MB}||\)</span>，证明：<spanclass="math inline">\(x=\frac{x_1+\lambdax_2}{1+\lambda},y=\frac{y_1+\lambda y_2}{1+\lambda},z=\frac{z_1+\lambdaz_2}{1+\lambda}\)</span>。</p></blockquote><p><span class="math display">\[\vec{AM}=\frac{\lambda}{1+\lambda}\vec{AB}\\\\\vec{OM}=\vec{OA}+\vec{AM}\\故x=\frac{x_1+\lambda x_2}{1+\lambda},y=\frac{y_1+\lambday_2}{1+\lambda},z=\frac{z_1+\lambda z_2}{1+\lambda}\]</span></p><blockquote><p>6.已知线段AB被点<spanclass="math inline">\(C(2,0,2),D(5,-2,0)\)</span>三等分，试求点A与点B的坐标。</p></blockquote><p><span class="math display">\[易知C为AD中点，D为CB中点\\\\故A(-1,2,4),B(8,-4,-2)\]</span></p>]]></content>
    
    
    <categories>
      
      <category>Daily</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Readme</title>
    <link href="/2022/08/17/Readme/"/>
    <url>/2022/08/17/Readme/</url>
    
    <content type="html"><![CDATA[<h1 id="博客食用指南">博客食用指南</h1><p>本博客使用Github托管，所以访问可能比较慢。</p><p>如果有机会之后可能自建服务器，不过那就是之后的事了。</p><p>框架为Hexo，主题为Fluid。</p><h2 id="关于我"><ahref="https://lprdsb.github.io/about/">关于我</a></h2><h2 id="关于博客内容">关于博客内容</h2><p>会不定期更新生活/学习相关内容</p><p>学术方面包括但不限于数学/物理/acm</p><p>希望本博可以长期更新下去（<del>咕咕咕</del>）</p><h2 id="数学公式">数学公式</h2><p><span class="math inline">\(\LaTeX\)</span>采用Mathjax</p><h2 id="代码">代码</h2><p>example for c++：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bit/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> a, b;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, a + b);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>对于c++，常在开头加入缺省源（<del>oi后遗症</del>）：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> For(i, a, b) for(int i = (a), en = (b); i &lt;= en; ++i)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Rof(i, a, b) for(int i = (a), en = (b); i &gt;= en; --i)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Tra(u, i) for(int i = hd[u]; ~i; i = e[i].net)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> cst const</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LL long long</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DD double</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LD long double</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> pb push_back</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> mp make_pair</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> fir first</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> sec second</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> inf 0x3f3f3f3f</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Inf 0x3f3f3f3f3f3f3f3f</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> eps 1e-12</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">T</span>&gt;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">read</span><span class="hljs-params">(T &amp;x)</span></span>&#123;<br><span class="hljs-type">char</span> ch;<br><span class="hljs-type">bool</span> ok;<br><span class="hljs-keyword">for</span>(ok = <span class="hljs-number">0</span>, ch = <span class="hljs-built_in">getchar</span>(); !<span class="hljs-built_in">isdigit</span>(ch); ch = <span class="hljs-built_in">getchar</span>()) <span class="hljs-keyword">if</span>(ch == <span class="hljs-string">&#x27;-&#x27;</span>) ok = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(x = <span class="hljs-number">0</span>; <span class="hljs-built_in">isdigit</span>(ch); x = x * <span class="hljs-number">10</span> + ch - <span class="hljs-string">&#x27;0&#x27;</span>, ch = <span class="hljs-built_in">getchar</span>());<br><span class="hljs-keyword">if</span>(ok) x = -x;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-comment">//freopen(&quot;in&quot;, &quot;r&quot;, stdin);</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2022/08/13/8-13/"/>
    <url>/2022/08/13/8-13/</url>
    
    <content type="html"><![CDATA[<h1 id="本文为hexo环境下第一篇文章-用来测试">本文为Hexo环境下第一篇文章用来测试</h1><p>原文在这里：</p><p><ahref="https://www.cnblogs.com/lprdsb/p/15755063.html">关于化学可逆反应中投料比等于计量系数比时转化率最大的证明</a></p><h1id="一不小心就颓废了3个多月真爽2022年了还是得写点东西">一不小心就颓废了3个多月，<del>真爽</del>，2022年了，还是得写点东西。</h1><p>写的东西呢，是关于可逆反应中，物质的总量固定，该以怎样的投料比投料才能使平衡转化率最大。</p><p>之前做题的时候就错了，后来问老师才知道是结论，可是，这玩意儿没证明用起来也太不爽了。</p><p>于是，在网上到处找，终于摸清了证明的路数，在这里做个简单的证明</p><p>首先，引入一个比较经典的问题：</p><p>假设对于多元函数的约束<spanclass="math inline">\(f(x_1,\dots,x_n)=0\)</span>，我们想知道<spanclass="math inline">\(x_n\)</span>的极值。</p><p>就类似于圆的方程中，强行分类讨论得到<spanclass="math inline">\(y\)</span>关于<spanclass="math inline">\(x\)</span>的方程一样，假设我们强行解出<spanclass="math inline">\(x_n\)</span>的表达式： <spanclass="math display">\[x_n=g(x_1,\dots,x_{n-1})\]</span> 使得原方程恒成立，即： <span class="math display">\[f(x_1,\dots,g(x_1,\dots,x_{n-1}))\equiv0\]</span> 我们知道，想要<spanclass="math inline">\(x_n\)</span>取得极值，一个必要条件就是对于<spanclass="math inline">\(i=1\dots n-1\)</span>，<spanclass="math inline">\(\frac{\partial f}{\partial x_i}=0\)</span></p><p>对<span class="math inline">\(x_n\)</span>求关于<spanclass="math inline">\(x_i\)</span>偏导，即： <spanclass="math display">\[\frac{\partial g}{\partial x_i}=0\]</span> 于是，我们能得到<spanclass="math inline">\(n-1\)</span>个方程： <span class="math display">\[\begin{cases}\frac{\partial g}{\partial x_1}=0\\\\\dots\\\frac{\partial g}{\partial x_{n-1}}=0\\\\\end{cases}\]</span> 解出来的<span class="math inline">\(x_1\dotsx_{n-1}\)</span>即为<spanclass="math inline">\(x_n\)</span>取得极值时的取值，这玩意当然可以用来求曲线中某个变量的极值，也可以用来算圆锥曲线等二次曲线在某个点的切线斜率，当变量只有两个的时候，就是通常所说的隐函数。</p><p>那么，对于这样一个可逆反应： <span class="math display">\[a_1A_1(g) +a_2A_2(g)+\cdots+a_nA_n(g) \rightleftharpoons b_1B_1(g)+b_2B_2(g)\cdots+b_nB_n(g)\]</span> 设它的初始物质总量为<spanclass="math inline">\(S\)</span>，体积为<spanclass="math inline">\(V\)</span>，<spanclass="math inline">\(A_{i(i=1\dots n-1)}\)</span>量分数为<spanclass="math inline">\(\varphi_i\)</span>，整个方程转化的量为<spanclass="math inline">\(x\)</span>，那么有： <span class="math display">\[k=\frac{\displaystyle\prod_{i=1}^{m}(\frac{b_ix}{V})^{b_i}}{\displaystyle\prod_{i=1}^{n-1}(\frac{S\cdot\varphi_i-a_ix}{V})^{a_i}\cdot[\frac{S\cdot(1-\sum_{i=1}^{n-1}\varphi_i)-a_nx}{V}]^{a_n}}\]</span> 化简得： <span class="math display">\[k\cdotV^{\sum_i^mb_i-\sum_i^na_i}=\frac{\displaystyle\prod_{i=1}^{m}(b_ix)^{b_i}}{\displaystyle\prod_{i=1}^{n-1}(S\cdot\varphi_i-a_ix)^{a_i}\cdot[S\cdot(1-\sum_{i=1}^{n-1}\varphi_i)-a_nx]^{a_n}}\]</span> 那么我们定义： <span class="math display">\[K=k\cdot V^{\sum_i^mb_i-\sum_i^na_i}\]</span> 有： <span class="math display">\[K\cdot\displaystyle\prod_{i=1}^{n-1}(S\cdot\varphi_i-a_ix)^{a_i}\cdot[S\cdot(1-\sum_{i=1}^{n-1}\varphi_i)-a_nx]^{a_n}-\displaystyle\prod_{i=1}^{m}(b_ix)^{b_i}=0\]</span> 这就是关于<spanclass="math inline">\(\varphi_1\cdots\varphi_{n-1}\)</span>以及<spanclass="math inline">\(x\)</span>的约束条件，写得简单点，就是对于<spanclass="math inline">\(\varphi_1\cdots\varphi_{n-1}\)</span>以及<spanclass="math inline">\(x\)</span>的多元函数： <spanclass="math display">\[f(\varphi_1,\dots,\varphi_{n-1},x)=0\]</span> 现令<spanclass="math inline">\(x=g(\varphi_1,\dots,\varphi_{n-1})\)</span></p><p>现在问题转化为，如何在满足约束<spanclass="math inline">\(f\)</span>的情况下，求得<spanclass="math inline">\(x\)</span>的最大值，由以上推论可知，满足方程：<span class="math display">\[\begin{cases}\frac{\partial g}{\partial \varphi_1}=0\\\\\dots\\\\\frac{\partial g}{\partial \varphi_{n-1}}=0\\\\\end{cases}\]</span> 时的<spanclass="math inline">\(\varphi_1\dots\varphi_{n-1}\)</span>即为<spanclass="math inline">\(x\)</span>最大时的取值</p><p>那么： <span class="math display">\[\frac{\partial g}{\partial \varphi_t}=-\frac{\frac{\partial f}{\partial\varphi_t}}{\frac{\partial g}{\partial x}}=0\]</span> 即： <span class="math display">\[\displaystyle \frac{1}{K}\cdot \frac{\partial f}{\partial\varphi_t}=\\\prod_{i=1,i\neq t}^{n-1}(S\cdot \varphi_i-a_ix)^{a_i}\cdota_t\cdotS(S\varphi_t-a_tx)^{a_t-1}\cdot[S-S\sum_{i=1}^{n-1}\varphi_i-a_nx]^{a_n}\\\\-\prod_{i-1}^{n-1}(S\varphi_i-a_ix)^{a_i}\cdotSa_n(S-S\sum_{i=1}^{n-1}\varphi_i-a_nx)^{a_n-1}\\\\=0\]</span></p><p>化简得： <span class="math display">\[a_t(1-\sum_{i=1}^{n-1}\varphi_i)-\varphi_t a_n=0\]</span> 令<span class="math inline">\(\displaystyle\varphi_n=1-\sum_{i=1}^{n-1}\varphi_i\)</span>，有： <spanclass="math display">\[\frac{\varphi_t}{a_t}=\frac{\varphi_n}{a_n}\]</span> 这个式子的意义就是，当投料比等于化学计量数之比时，转化率<spanclass="math inline">\(x\)</span>取得最大值。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
